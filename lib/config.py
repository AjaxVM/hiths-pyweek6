# Class for reading and saving the game configuration
import os

class Config(object):
    def __init__(self):
        """All default settings go here."""
        self.screen_height = 480
        self.screen_width = 640
        self.fullscreen = 0
        self.music = 1
        self.sfx = 1
        self.fps_counter = 0
        self.attack_dialog = 1
        self.move_dialog = 1
        self.new_unit_dialog = 1
        self.make_file()
        self.open_settings()

    def make_file(self):
        """makes a new config file if there isn't one yet."""
        fname = os.path.join("data", "config.txt")
        if not os.path.exists(fname):
            self.save_settings()

    def save_settings(self):
        """Saves current settings to the file to be read on start: settings.py"""
        fname = os.path.join("data", "config.txt")
        f = open(fname, "w")
        f.write("# Generated by the game, your changes may be overwritten if you edit while running\n\n")

        for k, v in self.__dict__.iteritems():
            if not (k.startswith('__') or (type(v) == str and v[0].startswith('<'))):
                f.write(k + " = " + str(v) + "\n")

        f.close()

    def open_settings(self):
        fname = os.path.join("data", "config.txt")
        a = open(fname, "rU").read()

        for line in a.split("\n"):
            if line and not line.startswith("#"):
                a, b = line.split("=")
                a = a.split()[0]
                b = b.split()[0]
                setattr(self, a, int(b))
